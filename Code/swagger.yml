# swagger.yml
openapi: 3.0.0
info:
  title: 'COMP2001 - CW2'
  description: 'Trails microservice'
  version: '1.0.0'

servers: 
 - url: '/api'
  
components:
  schemas:
    Trail:
      type: object
      properties:
        trail_id:
          type: integer
          description: 'Identifier for each individual trail'
        trail_name: 
          type: string
          description: 'Name for the trails'
          maxLength: 127
        trail_summary:
          type: string
          description: 'A brief overview of the trail, including length and time to complete'
          maxLength: 500
        trail_description:
          type: string
          description: 'A description of the trail and its features'
          maxLength: 500
        difficulty:
          type: string
          enum:
            - easy
            - moderate
            - hard
          maxLength: 8
        length:
          type: number
          format: float
          description: 'How far the total trail is, measured in kilometres'
        elevation_gain:
          type: integer
          description: 'The total uphill distance during the trail, measured in metres'
        route_type:
          type: string
          enum:
            - loop
            - out and back
            - point to point
          maxLength: 14
        owner_id:
          type: integer
          description: 'The ID of the admin that made the trail on the website'
        location_point_1:
          type: integer
          description: 'The location of one point along a trail'
        location_point_2:
          type: integer
          description: 'The location of one point along a trail'
        location_point_3:
          type: integer
          description: 'The location of one point along a trail'
        location_point_4:
          type: integer
          description: 'The location of one point along a trail'
        location_point_5:
          type: integer
          description: 'The location of one point along a trail'
    User:
      type: object
      properties:
        user_id:
          type: integer
          description: 'Identifier for each individual user'
        username:
          type: string
          description: 'The name that the users go by on the site'
          maxLength: 63
        email:
          type: string
          format: email #Informal notation
          maxLength: 63
        password:
          type: string
          maxLength: 63
        role:
          type: string
          enum:
            - admin
            - user
    UserAuthentication:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email #Informal notation
          maxLength: 63
        password:
          type: string
          maxLength: 63
    Location:
      type: object
      required:
        - longitude
        - latitude
      properties:
        location_id:
          type: integer
          description: 'Identifier for each individual location'
        longitude:
          type: number
          format: float
          description: 'How far east is the location from Prime Meridian, measured in degrees'
          minimum: -180
          maximum: 180
        latitude:
          type: number
          format: float
          description: 'How far north is the location from the equator, measured in degrees'
          minimum: -90
          maximum: 90
        description:
          type: string
          minLength: 10
          maxLength: 500
    Feature:
      type: object
      properties:
        trail_feature_id:
          type: integer
          description: 'Identifier for each individual feature'
        trail_feature:
          type: string
          maxLength: 31
    Trail_Features:
      type: object
      required:
        - trail_id
        - trail_feature_id
      properties:
        trail_id:
          type: integer
        trail_feature_id:
          type: integer
    UserAuthentication:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email #Informal notation
          maxLength: 63
        password:
          type: string
          maxLength: 63
  parameters:
    trail_id:
      name: 'trail_id'
      in: 'path'
      required: True
      schema:
        type: integer
    user_id:
      name: 'user_id'
      in: 'path'
      required: True
      schema:
        type: integer
    location_id:
      name: 'location_id'
      in: 'path'
      required: True
      schema:
        type: integer
    trail_feature:
      name: 'trail_feature'
      in: 'path'
      required: True
      schema:
        type: string

paths:
  /trails:
    get:
      operationId: 'trails.read_all'
      tags:
        - 'trails'
      summary: list of all trails
      responses:
        '200':
          description: Successfully retrieved all trails!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trail'
        '400':
          description: Request has failed, please try again.
    post:
      operationId: 'trails.create'
      tags:
       - 'trails'
      summary: create a new trail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        '201':
          description: Trail successfully created!
        '400':
          description: Request failed, please try again.
  /trails/{trail_id}:
    get:
      operationId: 'trails.read_one'
      tags:
        - 'trails'
      summary: View a trail using an ID
      parameters:
        - $ref: '#/components/parameters/trail_id'
      responses:
        '200':
          description: Successful response, Trail exists
        '404':
          description: Trail not found
    delete:
      operationId: 'trails.delete'
      tags:
       - 'trails'
      summary: Delete a trail using an ID
      parameters:
       - $ref: '#/components/parameters/trail_id'
      responses:
        '204':
          description: Trail successfully deleted!
        '404':
          description: Trail not found, please try again.
    patch:
      operationId: 'trails.update'
      tags:
       - 'trails'
      summary: Update a trail using an ID
      parameters:
       - $ref: '#/components/parameters/trail_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        '200':
          description: Trail successfully updated!
        '404':
          description: Trail not found, please try again.
  /users:
    get:
      operationId: 'users.read_all'
      tags:
        - 'users'
      summary: list of all users
      responses:
        '200':
          description: Successfully retrieved all users!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Request has failed, please try again.
    post:
      operationId: 'users.create'
      tags:
       - 'users'
      summary: create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User successfully created!
        '400':
          description: Request failed, please try again.
  /users/{user_id}:
    get:
      operationId: 'users.read_one'
      tags:
        - 'users'
      summary: View a user using an ID
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: Successful response, User exists
        '404':
          description: User not found
    delete:
      operationId: 'users.delete'
      tags:
       - 'users'
      summary: Delete a user using an ID
      parameters:
       - $ref: '#/components/parameters/user_id'
      responses:
        '204':
          description: User successfully deleted!
        '404':
          description: User not found, please try again.
    patch:
      operationId: 'users.update'
      tags:
       - 'users'
      summary: Update a user using an ID
      parameters:
       - $ref: '#/components/parameters/user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User successfully updated!
        '404':
          description: User not found, please try again.
  /authenticate:
    post:
      operationId: 'users.authenication'
      tags:
       - 'users'
      summary: authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthentication'
      responses:
        '200':
          description: User successfully authenticated!
        '400':
          description: Request failed, please try again.
  /locations:
    get:
      operationId: 'locations.read_all'
      tags:
        - 'locations'
      summary: list of all locations
      responses:
        '200':
          description: Successfully retrieved all locations!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Request has failed, please try again.
    post:
      operationId: 'locations.create'
      tags:
       - 'locations'
      summary: create a new location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          description: Location successfully created!
        '400':
          description: Request failed, please try again.
  /locations/{location_id}:
    get:
      operationId: 'locations.read_one'
      tags:
        - 'locations'
      summary: View a location using an ID
      parameters:
        - $ref: '#/components/parameters/location_id'
      responses:
        '200':
          description: Successful response, Location exists
        '404':
          description: Location not found
    delete:
      operationId: 'locations.delete'
      tags:
       - 'locations'
      summary: Delete a location using an ID
      parameters:
       - $ref: '#/components/parameters/location_id'
      responses:
        '204':
          description: Location successfully deleted!
        '404':
          description: Location not found, please try again.
    patch:
      operationId: 'locations.update'
      tags:
       - 'locations'
      summary: Update a location using an ID
      parameters:
       - $ref: '#/components/parameters/location_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Location successfully updated!
        '404':
          description: Location not found, please try again.
  /features:
    get:
      operationId: 'features.read_all'
      tags:
        - 'features'
      summary: list of all features
      responses:
        '200':
          description: Successfully retrieved all features!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '400':
          description: Request has failed, please try again.
    post:
      operationId: 'features.create'
      tags:
       - 'features'
      summary: create a new feature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      responses:
        '201':
          description: Feature successfully created!
        '400':
          description: Request failed, please try again.
  /features/{trail_feature}:
    get:
      operationId: 'features.read_one'
      tags:
        - 'features'
      summary: View a feature using an ID
      parameters:
        - $ref: '#/components/parameters/trail_feature'
      responses:
        '200':
          description: Successful response, Feature exists
        '404':
          description: Feature not found
    delete:
      operationId: 'features.delete'
      tags:
       - 'features'
      summary: Delete a feature using an ID
      parameters:
       - $ref: '#/components/parameters/trail_feature'
      responses:
        '204':
          description: Feature successfully deleted!
        '404':
          description: Feature not found, please try again.
    patch:
      operationId: 'features.update'
      tags:
       - 'features'
      summary: Update a feature using an ID
      parameters:
       - $ref: '#/components/parameters/trail_feature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      responses:
        '200':
          description: Feature successfully updated!
        '404':
          description: Feature not found, please try again.
  /trail_features:
    get:
      operationId: 'trail_features.read_all'
      tags:
        - 'trail_features'
      summary: list of all trail features
      responses:
        '200':
          description: Successfully retrieved all trail features!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trail_Features'
        '400':
          description: Request has failed, please try again.
    post:
      operationId: 'trail_features.create'
      tags:
       - 'trail_features'
      summary: create a new trail feature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail_Features'
      responses:
        '201':
          description: Trail feature successfully created!
        '400':
          description: Request failed, please try again.
  /trail_features/{trail_id}:
    get:
      operationId: 'trail_features.read_one'
      tags:
        - 'trail_features'
      summary: Retrieve all features tied to a trail or all trails tied to a feature
      parameters:
        - name: 'id'
          in: 'path'
          description: 'The ID of either the trail or feature, depending on the request type'
          required: true
          schema:
            type: string
        - name: 'type'
          in: 'query'
          description: 'Specify whether to fetch features tied to a trail or trails tied to a feature.'
          required: true
          schema:
            type: string
            enum:
              - trail
              - trail_feature
      responses:
        '200':
          description: Successfully retrieved data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trail_Features'
        '400':
          description: Request failed, please retry.
    delete:
      operationId: 'trail_features.delete'
      tags:
       - 'trail_features'
      summary: Delete a trail feature using an ID
      parameters:
       - $ref: '#/components/parameters/trail_id'
      responses:
        '204':
          description: Trail feature successfully deleted!
        '404':
          description: Trail feature not found, please try again.
  